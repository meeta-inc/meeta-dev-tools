name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install workspace dependencies
      run: npm run install:all
      
    - name: Run linting (if available)
      run: |
        cd ai-navi-backend-mock
        if npm run lint --if-present; then
          echo "Linting passed"
        else
          echo "No linting script found, skipping"
        fi
      continue-on-error: true
      
    - name: Run tests (if available)
      run: |
        if [ -d "ai-navi-backend-mock/tests" ] || find ai-navi-backend-mock/src -name "*.test.*" -o -name "*.spec.*" | grep -q .; then
          npm run test --workspace=ai-navi-backend-mock
        else
          echo "No test files found, skipping tests"
        fi
      continue-on-error: true
      
    - name: Run tests with coverage (if available)
      run: |
        if [ -d "ai-navi-backend-mock/tests" ] || find ai-navi-backend-mock/src -name "*.test.*" -o -name "*.spec.*" | grep -q .; then
          npm run test:coverage --workspace=ai-navi-backend-mock
        else
          echo "No test files found, skipping coverage"
        fi
      continue-on-error: true
      
    - name: Build projects
      run: npm run build --workspace=ai-navi-backend-mock
      
    - name: Run API integration tests
      run: |
        cd ai-navi-backend-mock
        # Start server in background
        npm run dev &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Run integration tests
        make test-health || echo "Health test failed"
        make test-validation || echo "Validation test failed"
        
        # Stop server
        kill $SERVER_PID
      continue-on-error: true

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install workspace dependencies
      run: npm run install:all
      
    - name: Generate coverage report (if available)
      run: |
        if [ -d "ai-navi-backend-mock/tests" ] || find ai-navi-backend-mock/src -name "*.test.*" -o -name "*.spec.*" | grep -q .; then
          npm run test:coverage --workspace=ai-navi-backend-mock
        else
          echo "No test files found, skipping coverage generation"
          mkdir -p ai-navi-backend-mock/coverage
          echo "No tests available" > ai-navi-backend-mock/coverage/README.md
        fi
      continue-on-error: true
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        directory: ./ai-navi-backend-mock/coverage
        flags: ai-navi-backend-mock
        name: ai-navi-backend-mock-coverage
        fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install workspace dependencies
      run: npm run install:all
      
    - name: Run security audit
      run: |
        npm audit --audit-level=high
        cd ai-navi-backend-mock
        npm audit --audit-level=high
      continue-on-error: true

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image (ai-navi-backend-mock)
      uses: docker/build-push-action@v5
      with:
        context: ./ai-navi-backend-mock
        file: ./ai-navi-backend-mock/Dockerfile
        push: false
        tags: meeta/ai-navi-backend-mock:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max